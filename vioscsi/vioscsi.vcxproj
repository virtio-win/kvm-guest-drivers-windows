<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Win10 Release|Win32">
      <Configuration>Win10 Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Win10 Release|x64">
      <Configuration>Win10 Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Win10 Release|ARM64">
      <Configuration>Win10 Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Win11 Release|ARM64">
      <Configuration>Win11 Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Win11 Release|Win32">
      <Configuration>Win11 Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Win11 Release|x64">
      <Configuration>Win11 Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{1530C86E-90C0-4270-B3A2-0FB90152CA48}</ProjectGuid>
    <TemplateGuid>{dd38f7fc-d7bd-488b-9242-7d8754cde80d}</TemplateGuid>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <MinimumVisualStudioVersion>11.0</MinimumVisualStudioVersion>
    <Configuration>Win10 Release</Configuration>
    <Platform Condition="'$(Platform)' == ''">Win32</Platform>
    <DisableTracing Condition="'$(FORCE_RUN_UNCHECKED)' != ''">true</DisableTracing>
    <LimitPathsWPP Condition="'$(RUN_WPP_ALL_PATHS)' == ''">WPPColdPathOnly</LimitPathsWPP>
    <UseDebugTracing Condition="'$(FORCE_RUN_DEBUG)' != ''">true</UseDebugTracing>
    <SignMode>Off</SignMode>
  </PropertyGroup>
  <PropertyGroup Label="Globals">
    <RootNamespace>vioscsi</RootNamespace>
    <VCTargetsPath Condition="'$(VCTargetsPath11)' != '' and '$(VisualStudioVersion)' == '11.0'">$(VCTargetsPath11)</VCTargetsPath>
  </PropertyGroup>
  <PropertyGroup Label="PropertySheets">
    <PlatformToolset>WindowsKernelModeDriver8.1</PlatformToolset>
    <ConfigurationType>Driver</ConfigurationType>
    <DriverType>Miniport</DriverType>
  </PropertyGroup>
  <PropertyGroup Label="Configuration">
    <UseDebugLibraries>false</UseDebugLibraries>
    <ALLOW_DATE_TIME>1</ALLOW_DATE_TIME>
  </PropertyGroup>
  <PropertyGroup Label="Configuration" Condition="'$(Configuration)|$(Platform)'=='Win10 Release|Win32'">
    <TargetVersion>Windows10</TargetVersion>
    <PlatformToolset>WindowsKernelModeDriver10.0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win11 Release|Win32'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <PlatformToolset>WindowsKernelModeDriver10.0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Label="Configuration" Condition="'$(Configuration)|$(Platform)'=='Win10 Release|x64'">
    <TargetVersion>Windows10</TargetVersion>
    <PlatformToolset>WindowsKernelModeDriver10.0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win11 Release|x64'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <PlatformToolset>WindowsKernelModeDriver10.0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Label="Configuration" Condition="'$(Configuration)|$(Platform)'=='Win10 Release|ARM64'">
    <TargetVersion>Windows10</TargetVersion>
    <PlatformToolset>WindowsKernelModeDriver10.0</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win11 Release|ARM64'" Label="Configuration">
    <TargetVersion>Windows10</TargetVersion>
    <PlatformToolset>WindowsKernelModeDriver10.0</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(MSBuildProjectDirectory)\vioscsi.props" />
  <Import Project="$(MSBuildProjectDirectory)\..\build\Driver.Common.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <DebuggerFlavor>DbgengKernelDebugger</DebuggerFlavor>
    <TargetName>vioscsi</TargetName>
    <TargetExt>.sys</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win10 Release|Win32'">
    <OutDir>objfre_win10_x86\i386\</OutDir>
    <IntDir>objfre_win10_x86\i386\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win11 Release|Win32'">
    <OutDir>objfre_win11_x86\i386\</OutDir>
    <IntDir>objfre_win11_x86\i386\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win10 Release|x64'">
    <OutDir>objfre_win10_amd64\amd64\</OutDir>
    <IntDir>objfre_win10_amd64\amd64\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win11 Release|x64'">
    <OutDir>objfre_win11_amd64\amd64\</OutDir>
    <IntDir>objfre_win11_amd64\amd64\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win10 Release|ARM64'">
    <OutDir>objfre_win10_arm64\arm64\</OutDir>
    <IntDir>objfre_win10_arm64\arm64\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Win11 Release|ARM64'">
    <OutDir>objfre_win11_arm64\arm64\</OutDir>
    <IntDir>objfre_win11_arm64\arm64\</IntDir>
  </PropertyGroup>
  <PropertyGroup>
    <CustomBuildAfterTargets>dvl</CustomBuildAfterTargets>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <AdditionalIncludeDirectories>$(IntDir);%(AdditionalIncludeDirectories);..\VirtIO</AdditionalIncludeDirectories>
      <WarningLevel>Level3</WarningLevel>
    </ClCompile>
    <Link>
      <OptimizeReferences>true</OptimizeReferences>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <AdditionalDependencies>%(AdditionalDependencies);$(KernelBufferOverflowLib);$(DDK_LIB_PATH)\ntoskrnl.lib;$(DDK_LIB_PATH)\storport.lib;$(DDK_LIB_PATH)\scsiwmi.lib;$(DDK_LIB_PATH)\wdm.lib;virtiolib.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>..\VirtIO\$(OutDir);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
    </Link>
    <ResourceCompile>
      <AdditionalIncludeDirectories>$(IntDir);%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Win10 Release'">
    <ClCompile>
      <PreprocessorDefinitions Condition="'$(DisableTracing)'=='true'">%(PreprocessorDefinitions);RUN_UNCHECKED=1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(LimitPathsWPP)'=='WPPColdPathOnly'">%(PreprocessorDefinitions);RUN_COLD_PATH_ONLY=1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(UseDebugTracing)'!='true'">%(PreprocessorDefinitions);EVENT_TRACING=1</PreprocessorDefinitions>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NTDDI_VERSION=NTDDI_WINTHRESHOLD</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)'=='Win11 Release'">
    <ClCompile>
      <PreprocessorDefinitions Condition="'$(DisableTracing)'=='true'">%(PreprocessorDefinitions);RUN_UNCHECKED=1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(LimitPathsWPP)'=='WPPColdPathOnly'">%(PreprocessorDefinitions);RUN_COLD_PATH_ONLY=1</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(UseDebugTracing)'!='true'">%(PreprocessorDefinitions);EVENT_TRACING=1</PreprocessorDefinitions>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);NTDDI_VERSION=NTDDI_WIN10_CO</PreprocessorDefinitions>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup>
    <CustomBuildStep>
      <Command>
        echo Copying $(TargetName).DVL.XML to Install\$(TargetOS)\$(TargetArch)\$(TargetName).DVL.XML
        copy /Y $(ProjectDir)$(TargetName).DVL.XML^
         $(ProjectDir)Install\$(TargetOS)\$(TargetArch)
        echo Copying $(IntDir)vc.nativecodeanalysis.all.xml to $(ProjectDir)
        copy /Y $(IntDir)vc.nativecodeanalysis.all.xml $(ProjectDir)
        if "$(TargetOS)"=="Win10" (
          echo Copying $(TargetName).DVL.XML to $(ProjectDir)$(TargetName).DVL-win10-latest.XML
          copy /Y $(ProjectDir)$(TargetName).DVL.XML^
           $(ProjectDir)$(TargetName).DVL-win10-latest.XML
        )
        if "$(TargetOS)"=="Win11" (
          echo Copying $(TargetName).DVL.XML to $(ProjectDir)$(TargetName).DVL-win11-latest.XML
          copy /Y $(ProjectDir)$(TargetName).DVL.XML^
           $(ProjectDir)$(TargetName).DVL-win11-latest.XML
        )
        call "..\build\makeLegacyDVLs.bat" "$(ProjectDir)" "$(IntDir)" "$(TargetName)" "$(Configuration)" "$(Platform)"
        if exist "$(ProjectDir)$(TargetName).DVL-win10-1903.XML" (
          echo Copying $(TargetName).DVL-win10-1903.XML to Install\$(TargetOS)\$(TargetArch)\$(TargetName).DVL-win10.XML
          copy /Y $(ProjectDir)$(TargetName).DVL-win10-1903.XML^
           $(ProjectDir)Install\$(TargetOS)\$(TargetArch)\$(TargetName).DVL-win10.XML
        ) else (
          echo Unable to copy Win10 DVL $(ProjectDir)$(TargetName).DVL-win10-1903.XML - it does not exist.
        )
        if exist "$(ProjectDir)$(TargetName).DVL-win10-1607.XML" (
          echo Copying $(TargetName).DVL-win10-1607.XML to Install\$(TargetOS)\$(TargetArch)\$(TargetName).DVL-compat.XML
          copy /Y $(ProjectDir)$(TargetName).DVL-win10-1607.XML^
           $(ProjectDir)Install\$(TargetOS)\$(TargetArch)\$(TargetName).DVL-compat.XML
        ) else (
          echo Unable to copy COMPAT DVL $(ProjectDir)$(TargetName).DVL-win10-1607.XML - it does not exist.
        )
      </Command>
      <Inputs>$(IntDir)vc.nativecodeanalysis.all.xml;$(ProjectDir)$(TargetName).DVL.XML</Inputs>
      <Outputs>$(ProjectDir)Install\$(TargetOS)\$(TargetArch)\$(TargetName).DVL.XML;$(ProjectDir)Install\$(TargetOS)\$(TargetArch)\$(TargetName).DVL-win10.XML</Outputs>
    </CustomBuildStep>
    <ClCompile>
      <WppEnabled Condition="'$(Configuration)|$(Platform)'=='Win10 Release|Win32' And '$(DisableTracing)'!='true' And '$(UseDebugTracing)'!='true'">true</WppEnabled>
      <WppEnabled Condition="'$(Configuration)|$(Platform)'=='Win11 Release|Win32' And '$(DisableTracing)'!='true' And '$(UseDebugTracing)'!='true'">true</WppEnabled>
      <WppGenerateUsingTemplateFile Condition="'$(Configuration)|$(Platform)'=='Win10 Release|Win32'">{km-StorDefault.tpl}*.tmh</WppGenerateUsingTemplateFile>
      <WppGenerateUsingTemplateFile Condition="'$(Configuration)|$(Platform)'=='Win11 Release|Win32'">{km-StorDefault.tpl}*.tmh</WppGenerateUsingTemplateFile>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win10 Release|Win32' And '$(LimitPathsWPP)'=='WPPColdPathOnly'">wpp_cold_path.h</WppScanConfigurationData>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win10 Release|Win32' And '$(LimitPathsWPP)'!='WPPColdPathOnly'">wpp_all_paths.h</WppScanConfigurationData>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win11 Release|Win32' And '$(LimitPathsWPP)'=='WPPColdPathOnly'">wpp_cold_path.h</WppScanConfigurationData>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win11 Release|Win32' And '$(LimitPathsWPP)'!='WPPColdPathOnly'">wpp_all_paths.h</WppScanConfigurationData>
    </ClCompile>
    <ClCompile>
      <WppEnabled Condition="'$(Configuration)|$(Platform)'=='Win10 Release|x64' And '$(DisableTracing)'!='true' And '$(UseDebugTracing)'!='true'">true</WppEnabled>
      <WppEnabled Condition="'$(Configuration)|$(Platform)'=='Win11 Release|x64' And '$(DisableTracing)'!='true' And '$(UseDebugTracing)'!='true'">true</WppEnabled>
      <WppGenerateUsingTemplateFile Condition="'$(Configuration)|$(Platform)'=='Win10 Release|x64'">{km-StorDefault.tpl}*.tmh</WppGenerateUsingTemplateFile>
      <WppGenerateUsingTemplateFile Condition="'$(Configuration)|$(Platform)'=='Win11 Release|x64'">{km-StorDefault.tpl}*.tmh</WppGenerateUsingTemplateFile>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win10 Release|x64' And '$(LimitPathsWPP)'=='WPPColdPathOnly'">wpp_cold_path.h</WppScanConfigurationData>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win10 Release|x64' And '$(LimitPathsWPP)'!='WPPColdPathOnly'">wpp_all_paths.h</WppScanConfigurationData>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win11 Release|x64' And '$(LimitPathsWPP)'=='WPPColdPathOnly'">wpp_cold_path.h</WppScanConfigurationData>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win11 Release|x64' And '$(LimitPathsWPP)'!='WPPColdPathOnly'">wpp_all_paths.h</WppScanConfigurationData>
    </ClCompile>
    <ClCompile>
      <WppEnabled Condition="'$(Configuration)|$(Platform)'=='Win10 Release|ARM64' And '$(DisableTracing)'!='true' And '$(UseDebugTracing)'!='true'">true</WppEnabled>
      <WppEnabled Condition="'$(Configuration)|$(Platform)'=='Win11 Release|ARM64' And '$(DisableTracing)'!='true' And '$(UseDebugTracing)'!='true'">true</WppEnabled>
      <WppGenerateUsingTemplateFile Condition="'$(Configuration)|$(Platform)'=='Win10 Release|ARM64'">{km-StorDefault.tpl}*.tmh</WppGenerateUsingTemplateFile>
      <WppGenerateUsingTemplateFile Condition="'$(Configuration)|$(Platform)'=='Win11 Release|ARM64'">{km-StorDefault.tpl}*.tmh</WppGenerateUsingTemplateFile>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win10 Release|ARM64' And '$(LimitPathsWPP)'=='WPPColdPathOnly'">wpp_cold_path.h</WppScanConfigurationData>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win10 Release|ARM64' And '$(LimitPathsWPP)'!='WPPColdPathOnly'">wpp_all_paths.h</WppScanConfigurationData>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win11 Release|ARM64' And '$(LimitPathsWPP)'=='WPPColdPathOnly'">wpp_cold_path.h</WppScanConfigurationData>
      <WppScanConfigurationData Condition="'$(Configuration)|$(Platform)'=='Win11 Release|ARM64' And '$(LimitPathsWPP)'!='WPPColdPathOnly'">wpp_all_paths.h</WppScanConfigurationData>
    </ClCompile>
  </ItemDefinitionGroup>
  <ItemGroup>
    <Inf Include="vioscsi.inx" />
  </ItemGroup>
  <ItemGroup>
    <FilesToPackage Include="$(TargetPath)" />
    <FilesToPackage Include="@(Inf->'%(CopyOutput)')" Condition="'@(Inf)'!=''" />
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="helper.h" />
    <ClInclude Include="trace.h" />
    <ClInclude Include="vioscsi.h" />
  </ItemGroup>
  <ItemGroup>
    <ResourceCompile Include="vioscsi.rc" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="helper.c" />
    <ClCompile Include="utils.c" />
    <ClCompile Include="vioscsi.c" />
    <ClCompile Include="virtio_pci.c" />
  </ItemGroup>
  <ItemGroup>
    <Mofcomp Include="vioscsi.mof" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <Import Project="$(MSBuildProjectDirectory)\..\build\Driver.Common.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>
